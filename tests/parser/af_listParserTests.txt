!! Version 2
# Force the test runner to ensure the extension is loaded
!! functionhooks
af_list
!! endfunctionhooks

# This file tests the #af_list parser function

!! test
Test list with empty string
!! wikitext
{{#af_print: {{#af_list: }} }}
!! html
<ul><li>0: </li></ul>
!! end

!! test
Test singleton list
!! wikitext
{{#af_print: {{#af_list: a }} }}
!! html
<ul><li>0: a</li></ul>
!! end

!! test
Test list of strings
!! wikitext
{{#af_print: {{#af_list: a | b | c }} }}
!! html
<ul><li>0: a</li>
<li>1: b</li>
<li>2: c</li></ul>
!! end

!! test
Test list remembers order
!! wikitext
{{#af_print: {{#af_list: b | c | a | e | d }} }}
!! html
<ul><li>0: b</li>
<li>1: c</li>
<li>2: a</li>
<li>3: e</li>
<li>4: d</li></ul>
!! end

!! test
Test list of integers
!! wikitext
{{#af_print: {{#af_list: {{#af_int: 1}} | {{#af_int: 2 }} | {{#af_int: 3 }} }} }}
!! html
<ul><li>0: 1</li>
<li>1: 2</li>
<li>2: 3</li></ul>
!! end

!! test
Test list of booleans
!! wikitext
{{#af_print: {{#af_list: {{#af_bool: yes}} | {{#af_bool: no}} }} }}
!! html
<ul><li>0: true</li>
<li>1: false</li></ul>
!! end

!! test
Test list of lists
!! wikitext
{{#af_print: {{#af_list: {{#af_list: a | b | c }} | {{#af_list: d | e | f }} }} }}
!! html
<ul><li>0
<ul><li>0: a</li>
<li>1: b</li>
<li>2: c</li></ul></li>
<li>1
<ul><li>0: d</li>
<li>1: e</li>
<li>2: f</li></ul></li></ul>
!! end

!! test
Test list of objects
!! wikitext
{{#af_print: {{#af_list: {{#af_object: a=a | b=b | c=c }} | {{#af_object: d=d | e=e | f=f }} }} }}
!! html
<ul><li>0
<ul><li>a: a</li>
<li>b: b</li>
<li>c: c</li></ul></li>
<li>1
<ul><li>d: d</li>
<li>e: e</li>
<li>f: f</li></ul></li></ul>
!! end
